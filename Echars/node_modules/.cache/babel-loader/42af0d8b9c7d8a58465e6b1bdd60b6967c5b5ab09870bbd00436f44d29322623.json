{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/44563/Desktop/Echars/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _defineProperty from \"C:/Users/44563/Desktop/Echars/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _asyncToGenerator from \"C:/Users/44563/Desktop/Echars/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport { inject, onMounted, reactive } from 'vue';\nexport default {\n  setup: function setup() {\n    var $charts = inject(\"echarts\");\n    var $axios = inject(\"axios\");\n    var data = reactive({});\n    var xdata = reactive([]);\n    var ydata = reactive([]);\n    //   设置数据\n    function setData() {\n      xdata = data.chartOne.chartData.map(function (item) {\n        return item.title;\n      });\n      ydata = data.chartOne.chartData.map(function (item) {\n        return item.num;\n      });\n    }\n    //   请求数据\n    function getData() {\n      return _getData.apply(this, arguments);\n    }\n    function _getData() {\n      _getData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var res;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return $axios({\n                  url: \"/one/data\"\n                });\n              case 2:\n                res = _context.sent;\n                data = res.data;\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _getData.apply(this, arguments);\n    }\n    onMounted(function () {\n      // 初始化echarts\n      var myChart = $charts.init(document.querySelector('#oneChart'));\n      getData().then(function () {\n        var _xAxis;\n        setData();\n        myChart.setOption({\n          grid: {\n            // 让图表占满容器\n            top: \"3%\",\n            left: \"1%\",\n            right: \"6%\",\n            bottom: \"3%\",\n            containLabel: true,\n            width: \"80%\",\n            height: \"80%\",\n            tooltip: {\n              show: true,\n              trigger: 'item',\n              backgroundColor: 'rgba(50,50,50,0.7)'\n            }\n          },\n          xAxis: (_xAxis = {\n            type: \"value\",\n            name: '销售量',\n            nameLocation: 'end'\n          }, _defineProperty(_xAxis, \"nameLocation\", \"middle\"), _defineProperty(_xAxis, \"offset\", 2), _defineProperty(_xAxis, \"nameTextStyle\", {\n            color: '#fff'\n          }), _xAxis),\n          yAxis: {\n            type: \"category\",\n            data: xdata\n          },\n          series: [{\n            type: \"bar\",\n            data: ydata,\n            itemStyle: {\n              color: new $charts.graphic.LinearGradient(0, 0, 1, 1, [{\n                offset: 0,\n                color: \"#73a373\"\n              }, {\n                offset: .5,\n                color: \"#7289ab\"\n              }, {\n                offset: 1,\n                color: \"#cb2382\"\n              }])\n            }\n          }]\n        });\n      });\n      window.onresize = function () {\n        myChart.resize();\n      };\n    });\n    return {\n      getData: getData,\n      data: data,\n      xdata: xdata,\n      ydata: ydata,\n      setData: setData\n    };\n  }\n};","map":{"version":3,"mappings":";;;;AAQA,SAASA,MAAM,EAAEC,SAAS,EAAEC,QAAO,QAAS,KAAI;AAChD,eAAe;EACXC,KAAK,mBAAG;IACJ,IAAIC,OAAM,GAAIJ,MAAM,CAAC,SAAS;IAC9B,IAAIK,MAAK,GAAIL,MAAM,CAAC,OAAO;IAE3B,IAAIM,IAAG,GAAIJ,QAAQ,CAAC,CAAC,CAAC;IACtB,IAAIK,KAAI,GAAIL,QAAQ,CAAC,EAAE;IACvB,IAAIM,KAAI,GAAIN,QAAQ,CAAC,EAAE;IACvB;IACA,SAASO,OAAO,GAAG;MACfF,KAAI,GAAID,IAAI,CAACI,QAAQ,CAACC,SAAS,CAACC,GAAG,CAAC,cAAG;QAAA,OAAKC,IAAI,CAACC,KAAK;MAAA;MACtDN,KAAI,GAAIF,IAAI,CAACI,QAAQ,CAACC,SAAS,CAACC,GAAG,CAAC,cAAG;QAAA,OAAKC,IAAI,CAACE,GAAG;MAAA;IACxD;IACA;IAAA,SACeC,OAAO;MAAA;IAAA;IAAA;MAAA,sEAAtB;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACoBX,MAAM,CAAC;kBAAEY,GAAG,EAAE;gBAAY,CAAC;cAAA;gBAAvCC,GAAE;gBACNZ,IAAG,GAAIY,GAAG,CAACZ,IAAG;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAClB;MAAA;IAAA;IAGAL,SAAS,CAAC,YAAM;MACZ;MACA,IAAIkB,OAAM,GAAIf,OAAO,CAACgB,IAAI,CAACC,QAAQ,CAACC,aAAa,CAAC,WAAW,CAAC;MAC9DN,OAAO,EAAE,CAACO,IAAI,CAAC,YAAM;QAAA;QACjBd,OAAO,EAAC;QACRU,OAAO,CAACK,SAAS,CAAC;UACdC,IAAI,EAAE;YAAE;YACJC,GAAG,EAAE,IAAI;YACTC,IAAI,EAAE,IAAI;YACVC,KAAK,EAAE,IAAI;YACXC,MAAM,EAAE,IAAI;YACZC,YAAY,EAAC,IAAI;YACjBC,KAAK,EAAC,KAAK;YACXC,MAAM,EAAC,KAAK;YACZC,OAAO,EAAC;cACJC,IAAI,EAAC,IAAI;cACTC,OAAO,EAAC,MAAM;cACdC,eAAe,EAAC;YACpB;UACJ,CAAC;UACDC,KAAK;YACDC,IAAI,EAAE,OAAO;YACbC,IAAI,EAAC,KAAK;YACVC,YAAY,EAAC;UAAK,2CACL,QAAQ,qCACd,CAAC,4CACM;YACVC,KAAK,EAAC;UACV,WACH;UACDC,KAAK,EAAE;YACHJ,IAAI,EAAE,UAAU;YAChBhC,IAAI,EAAEC;UAEV,CAAC;UACDoC,MAAM,EAAE,CACJ;YACIL,IAAI,EAAE,KAAK;YACXhC,IAAI,EAAEE,KAAK;YACXoC,SAAS,EAAE;cACPH,KAAK,EAAE,IAAIrC,OAAO,CAACyC,OAAO,CAACC,cAAc,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAChD,CACI;gBACIC,MAAM,EAAE,CAAC;gBACTN,KAAK,EAAE;cACX,CAAC,EACD;gBACIM,MAAM,EAAE,EAAE;gBACVN,KAAK,EAAE;cACX,CAAC,EACD;gBACIM,MAAM,EAAE,CAAC;gBACTN,KAAK,EAAE;cACX,EACJ;YAER;UACJ;QAER,CAAC;MACL,CAAC;MACDO,MAAM,CAACC,QAAQ,GAAC,YAAU;QACtB9B,OAAO,CAAC+B,MAAM,EAAC;MACnB;IAEJ,CAAC;IAED,OAAO;MACHlC,OAAO,EAAPA,OAAO;MAAEV,IAAI,EAAJA,IAAI;MAAEC,KAAK,EAALA,KAAK;MAAEC,KAAK,EAALA,KAAK;MAC3BC,OAAM,EAANA;IACJ;EACJ;AACJ","names":["inject","onMounted","reactive","setup","$charts","$axios","data","xdata","ydata","setData","chartOne","chartData","map","item","title","num","getData","url","res","myChart","init","document","querySelector","then","setOption","grid","top","left","right","bottom","containLabel","width","height","tooltip","show","trigger","backgroundColor","xAxis","type","name","nameLocation","color","yAxis","series","itemStyle","graphic","LinearGradient","offset","window","onresize","resize"],"sourceRoot":"","sources":["C:\\Users\\44563\\Desktop\\Echars\\src\\components\\itemOne.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <h2>销售总量</h2>\r\n        <div class=\"chart\" id=\"oneChart\">\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport { inject, onMounted, reactive } from 'vue'\r\nexport default {\r\n    setup() {\r\n        let $charts = inject(\"echarts\")\r\n        let $axios = inject(\"axios\")\r\n\r\n        let data = reactive({})\r\n        let xdata = reactive([])\r\n        let ydata = reactive([])\r\n        //   设置数据\r\n        function setData() {\r\n            xdata = data.chartOne.chartData.map(item => item.title)\r\n            ydata = data.chartOne.chartData.map(item => item.num)\r\n        }\r\n        //   请求数据\r\n        async function getData() {\r\n            let res = await $axios({ url: \"/one/data\" })\r\n            data = res.data\r\n        }\r\n\r\n\r\n        onMounted(() => {\r\n            // 初始化echarts\r\n            let myChart = $charts.init(document.querySelector('#oneChart'))\r\n            getData().then(() => {\r\n                setData()\r\n                myChart.setOption({\r\n                    grid: { // 让图表占满容器\r\n                        top: \"3%\",\r\n                        left: \"1%\",\r\n                        right: \"6%\",\r\n                        bottom: \"3%\",\r\n                        containLabel:true,\r\n                        width:\"80%\",\r\n                        height:\"80%\",\r\n                        tooltip:{\r\n                            show:true,\r\n                            trigger:'item',\r\n                            backgroundColor:'rgba(50,50,50,0.7)'\r\n                        }\r\n                    },\r\n                    xAxis: {\r\n                        type: \"value\",\r\n                        name:'销售量',\r\n                        nameLocation:'end',\r\n                        nameLocation:\"middle\",\r\n                        offset:2,\r\n                        nameTextStyle:{\r\n                            color:'#fff'\r\n                        }\r\n                    },\r\n                    yAxis: {\r\n                        type: \"category\",\r\n                        data: xdata,\r\n\r\n                    },\r\n                    series: [\r\n                        {\r\n                            type: \"bar\",\r\n                            data: ydata,\r\n                            itemStyle: {\r\n                                color: new $charts.graphic.LinearGradient(0, 0, 1, 1,\r\n                                    [\r\n                                        {\r\n                                            offset: 0,\r\n                                            color: \"#73a373\",\r\n                                        },\r\n                                        {\r\n                                            offset: .5,\r\n                                            color: \"#7289ab\",\r\n                                        },\r\n                                        {\r\n                                            offset: 1,\r\n                                            color: \"#cb2382\"\r\n                                        }\r\n                                    ]\r\n                                )\r\n                            }\r\n                        }\r\n                    ]\r\n                })\r\n            })\r\n            window.onresize=function(){\r\n                myChart.resize()\r\n            }\r\n\r\n        })\r\n\r\n        return {\r\n            getData, data, xdata, ydata,\r\n            setData\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style lang=\"less\" scoped>\r\nh2 {\r\n    font-size: .25rem;\r\n    color: #fff;\r\n    height: .6rem;\r\n    text-align: center;\r\n}\r\n\r\n.chart {\r\n    height: 3.5rem /* 280px -> 3.5rem */;\r\n    width: 100%;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}