{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  id: \"main\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1);\n}","map":{"version":3,"mappings":";;EACSA,EAAE,EAAC;AAAM;;uBAAdC,oBAEM,OAFNC,UAEM","names":["id","_createElementBlock","_hoisted_1"],"sourceRoot":"","sources":["C:\\Users\\44563\\Desktop\\Echars\\src\\components\\itemMap.vue"],"sourcesContent":["<template>\r\n    <div id=\"main\">\r\n\r\n    </div>\r\n</template>\r\n<script>\r\nimport * as echarts from 'echarts/core';\r\nimport { LegendComponent } from 'echarts/components';\r\nimport { CanvasRenderer } from 'echarts/renderers';\r\nimport { Lines3DChart, Scatter3DChart } from 'echarts-gl/charts';\r\nimport { GlobeComponent } from 'echarts-gl/components';\r\nimport { onMounted } from '@vue/runtime-core';\r\n\r\nexport default {\r\n    setup() {\r\n\r\n        function chartInit() {\r\n            echarts.use([\r\n                LegendComponent,\r\n                GlobeComponent,\r\n                Lines3DChart,\r\n                Scatter3DChart,\r\n                CanvasRenderer\r\n            ]);\r\n\r\n            var ROOT_PATH = 'https://echarts.apache.org/examples';\r\n\r\n            var chartDom = document.getElementById('main');\r\n            var myChart = echarts.init(chartDom);\r\n            var option;\r\n\r\n            $.getJSON(ROOT_PATH + '/data-gl/asset/data/flights.json', function (data) {\r\n                var airports = data.airports.map(function (item) {\r\n                    return {\r\n                        coord: [item[3], item[4]]\r\n                    };\r\n                });\r\n                function getAirportCoord(idx) {\r\n                    return [data.airports[idx][3], data.airports[idx][4]];\r\n                }\r\n                // Route: [airlineIndex, sourceAirportIndex, destinationAirportIndex]\r\n                var routesGroupByAirline = {};\r\n                data.routes.forEach(function (route) {\r\n                    var airline = data.airlines[route[0]];\r\n                    var airlineName = airline[0];\r\n                    if (!routesGroupByAirline[airlineName]) {\r\n                        routesGroupByAirline[airlineName] = [];\r\n                    }\r\n                    routesGroupByAirline[airlineName].push(route);\r\n                });\r\n                var pointsData = [];\r\n                data.routes.forEach(function (airline) {\r\n                    pointsData.push(getAirportCoord(airline[1]));\r\n                    pointsData.push(getAirportCoord(airline[2]));\r\n                });\r\n                var series = data.airlines\r\n                    .map(function (airline) {\r\n                        var airlineName = airline[0];\r\n                        var routes = routesGroupByAirline[airlineName];\r\n                        if (!routes) {\r\n                            return null;\r\n                        }\r\n                        return {\r\n                            type: 'lines3D',\r\n                            name: airlineName,\r\n                            effect: {\r\n                                show: true,\r\n                                trailWidth: 2,\r\n                                trailLength: 0.15,\r\n                                trailOpacity: 1,\r\n                                trailColor: 'rgb(30, 30, 60)'\r\n                            },\r\n                            lineStyle: {\r\n                                width: 1,\r\n                                color: 'rgb(50, 50, 150)',\r\n                                // color: 'rgb(118, 233, 241)',\r\n                                opacity: 0.1\r\n                            },\r\n                            blendMode: 'lighter',\r\n                            data: routes.map(function (item) {\r\n                                return [airports[item[1]].coord, airports[item[2]].coord];\r\n                            })\r\n                        };\r\n                    })\r\n                    .filter(function (series) {\r\n                        return !!series;\r\n                    });\r\n                series.push({\r\n                    type: 'scatter3D',\r\n                    coordinateSystem: 'globe',\r\n                    blendMode: 'lighter',\r\n                    symbolSize: 2,\r\n                    itemStyle: {\r\n                        color: 'rgb(50, 50, 150)',\r\n                        opacity: 0.2\r\n                    },\r\n                    data: pointsData\r\n                });\r\n                myChart.setOption({\r\n                    legend: {\r\n                        selectedMode: 'single',\r\n                        left: 'left',\r\n                        data: Object.keys(routesGroupByAirline),\r\n                        orient: 'vertical',\r\n                        textStyle: {\r\n                            color: '#fff'\r\n                        }\r\n                    },\r\n                    globe: {\r\n                        environment: ROOT_PATH + '/data-gl/asset/starfield.jpg',\r\n                        heightTexture:\r\n                            ROOT_PATH + '/data-gl/asset/bathymetry_bw_composite_4k.jpg',\r\n                        displacementScale: 0.1,\r\n                        displacementQuality: 'high',\r\n                        baseColor: '#000',\r\n                        shading: 'realistic',\r\n                        realisticMaterial: {\r\n                            roughness: 0.2,\r\n                            metalness: 0\r\n                        },\r\n                        postEffect: {\r\n                            enable: true,\r\n                            depthOfField: {\r\n                                enable: false,\r\n                                focalDistance: 150\r\n                            }\r\n                        },\r\n                        temporalSuperSampling: {\r\n                            enable: true\r\n                        },\r\n                        light: {\r\n                            ambient: {\r\n                                intensity: 0\r\n                            },\r\n                            main: {\r\n                                intensity: 0.1,\r\n                                shadow: false\r\n                            },\r\n                            ambientCubemap: {\r\n                                texture: ROOT_PATH + '/data-gl/asset/lake.hdr',\r\n                                exposure: 1,\r\n                                diffuseIntensity: 0.5,\r\n                                specularIntensity: 2\r\n                            }\r\n                        },\r\n                        viewControl: {\r\n                            autoRotate: false\r\n                        },\r\n                        silent: true\r\n                    },\r\n                    series: series\r\n                });\r\n                window.addEventListener('keydown', function () {\r\n                    series.forEach(function (series, idx) {\r\n                        myChart.dispatchAction({\r\n                            type: 'lines3DToggleEffect',\r\n                            seriesIndex: idx\r\n                        });\r\n                    });\r\n                });\r\n            });\r\n\r\n            option && myChart.setOption(option);\r\n\r\n        }\r\n        onMounted(()=>{\r\n            chartInit()\r\n        })\r\n\r\n    }\r\n}\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}