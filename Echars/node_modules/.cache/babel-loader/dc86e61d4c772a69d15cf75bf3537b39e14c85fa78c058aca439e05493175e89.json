{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nvar _withScopeId = function _withScopeId(n) {\n  return _pushScopeId(\"data-v-651af269\"), n = n(), _popScopeId(), n;\n};\nvar _hoisted_1 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"h2\", null, \"各类占比\", -1 /* HOISTED */);\n});\nvar _hoisted_2 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"div\", {\n    \"class\": \"chart\",\n    id: \"fourChart\"\n  }, null, -1 /* HOISTED */);\n});\nvar _hoisted_3 = [_hoisted_1, _hoisted_2];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, _hoisted_3);\n}","map":{"version":3,"mappings":";;;;;sBAEQA,oBAAa,YAAT,MAAI;AAAA;;sBACRA,oBACM;IADD,SAAM,OAAO;IAACC,EAAE,EAAC;;;kBADtBC,UAAa,EACbC,UACM;;uBAHVC,oBAIM","names":["_createElementVNode","id","_hoisted_1","_hoisted_2","_createElementBlock"],"sourceRoot":"","sources":["C:\\Users\\44563\\Desktop\\Echars\\src\\components\\itemFour.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <h2>各类占比</h2>\r\n        <div class=\"chart\" id=\"fourChart\">\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport { inject, onMounted, reactive } from 'vue'\r\nexport default {\r\n    setup() {\r\n        let $charts = inject(\"echarts\")\r\n        let $axios = inject(\"axios\")\r\n\r\n        let data = reactive({})\r\n        let xdata = reactive([])\r\n        let ydata = reactive([])\r\n        //   设置数据\r\n        function setData() {\r\n            xdata = data.chartOne.chartData.map(item => item.title)\r\n            ydata = data.chartOne.chartData.map(item => item.num)\r\n        }\r\n        //   请求数据\r\n        async function getData() {\r\n            let res = await $axios({ url: \"/four/data\" })\r\n            data = res.data\r\n        }\r\n\r\n\r\n        onMounted(() => {\r\n            // 初始化echarts\r\n            let myChart = $charts.init(document.querySelector('#fourChart'))\r\n            // getData().then(() => {\r\n                // setData()\r\n                myChart.setOption({\r\n                    color:[\"#2f89cf\"],//柱颜色\r\n                    tooltip:{\r\n                        trigger:\"axis\",\r\n                        axisPointer:{\r\n                            type:\"shadow\",//坐标轴指示器\r\n                        }\r\n                    },\r\n                    // 图表区域修改\r\n                    grid: { \r\n                        top: \"3%\",\r\n                        left: \"5%\",\r\n                        bottom: \"2%\",\r\n                        // containLabel:true,\r\n                    },\r\n                    yAxis: {\r\n                        type: \"category\",//类目\r\n                        data: [\"html\",\"css\",\"js\",\"vue\",\"react\",\"axios\"],\r\n                        offset:5,\r\n                        axisTick:{\r\n                            show:false//不显示刻度\r\n                        },\r\n                        // 刻度标签相关样式\r\n                        axisLabel:{\r\n                           color:\"#fff\"\r\n                        },\r\n                        axisLine:{\r\n                            show:false,\r\n                        }   \r\n                    },\r\n                    xAxis: {            \r\n                       show:false\r\n                    },\r\n                    series: [\r\n                        {\r\n                            type: \"bar\",\r\n                            barWidth:'50%',\r\n                            data: [1520,1235,2548,4568,6896,1325,2548],\r\n                            itemStyle:{\r\n                                borderRadius:5,//柱子圆角\r\n                            }\r\n                        },\r\n                    ],\r\n                })\r\n            })\r\n            // 图表大小自适应(监听窗口大小改变)\r\n            window.addEventListener('resize', () => {\r\n            myChart.resize()\r\n        })\r\n        // })\r\n\r\n        return {\r\n            getData, data, xdata, ydata,\r\n            setData\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style lang=\"less\" scoped>\r\nh2 {\r\n    font-size: .25rem;\r\n    color: #fff;\r\n    height: .6rem;\r\n    text-align: center;\r\n}\r\n\r\n.chart {\r\n    height: 3.5rem /* 280px -> 3.5rem */;\r\n    width: 100%;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}